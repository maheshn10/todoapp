{"version":3,"sources":["actions/actionTypes.js","components/MenuPopup/MenuPopup.js","components/Tab/Tab.js","components/MyList/MyList.js","App.js","reducers/todoReducer.js","reducers/filterReducer.js","reducers/index.js","store.js","index.js"],"names":["TodoTypes","FilterTypes","useStyles","makeStyles","theme","button","display","marginTop","spacing","formControl","margin","minWidth","color","MenuPopup","classes","filter","useSelector","state","dispatch","useDispatch","React","useState","open","setOpen","handleOpen","data-test","FormControl","className","Select","id","onClose","onOpen","value","onChange","event","type","payload","filterType","target","MenuItem","Button","onClick","grow","flexGrow","menuButton","marginRight","title","breakpoints","up","todo","position","borderRadius","shape","backgroundColor","fade","palette","common","white","marginLeft","width","todoIcon","padding","height","pointerEvents","alignItems","justifyContent","inputRoot","inputInput","paddingLeft","transition","transitions","create","MuiSvgIcon","Tab","textInput","useRef","setTitle","Date","selectedDate","setSelectedDate","AppBar","Toolbar","IconButton","edge","aria-label","Typography","variant","noWrap","InputBase","placeholder","root","input","inputProps","e","inputRef","autoFocus","utils","DateFnsUtils","date","handleDateChange","minDate","format","clearable","TextFieldComponent","props","TextField","disabled","autoOk","current","focus","trim","completedate","maxWidth","background","paper","dividerInset","doneButton","deleteButton","incompleteButton","strikeTitle","textDecoration","MyList","todos","options","weekday","year","month","day","todolist","toDateString","completed","filterTodo","console","log","List","map","ListItem","key","ListItemAvatar","Fab","size","ListItemText","primary","secondary","toLocaleDateString","Alert","severity","Divider","component","App","todoReducer","sort","a","b","action","now","filterReducer","combineReducers","middleware","applyMiddleware","thunk","createlogger","store","createStore","reducers","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.de2b1903.chunk.js","sourcesContent":["export const TodoTypes = {\r\n    GETTODOS: \"GETTODOS\",\r\n    INSERTTODO: \"INSERTTODO\",\r\n    DELETETODO: \"DELETETODO\",\r\n    TOGGLETODO: \"TOGGLETODO\"\r\n}\r\n\r\nexport const FilterTypes = {\r\n    FILTERBY: \"FILTERBY\"\r\n}","import React from 'react';\r\nimport {useSelector, useDispatch} from 'react-redux';\r\nimport {FilterTypes} from '../../actions/actionTypes';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport Button from '@material-ui/core/Button';\r\nimport './MenupPopup.scss';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  button: {\r\n    display: 'block',\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n    color:'inherit',\r\n  },\r\n}));\r\n\r\nexport default function MenuPopup() {\r\n  const classes = useStyles();\r\n  const filter = useSelector(state => state.filter);\r\n  const dispatch = useDispatch();\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleChange = (event) => {\r\n    dispatch({type:FilterTypes.FILTERBY,payload:{filterType:event.target.value}});\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  return (\r\n    <div  data-test=\"menupopup\">\r\n      \r\n      <FormControl className={classes.formControl}>\r\n        <Select\r\n          id=\"demo-controlled-open-select\"\r\n          open={open}\r\n          onClose={handleClose}\r\n          onOpen={handleOpen}\r\n          value={filter}\r\n          onChange={handleChange}\r\n        >\r\n          <MenuItem value=\"\">\r\n          </MenuItem>\r\n          <MenuItem value={'All'}>All</MenuItem>\r\n          <MenuItem value={'Today'}>Due Today</MenuItem>\r\n          <MenuItem value={'Incomplete'}>Incomplete</MenuItem>\r\n          <MenuItem value={'Complete'}>Completed</MenuItem>\r\n          <MenuItem value={'Overdue'}>Overdue</MenuItem>\r\n        </Select>\r\n      </FormControl>\r\n      <Button onClick={handleOpen} data-test=\"buttonComponent\">\r\n        \r\n      </Button>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useRef } from 'react';\r\nimport {useDispatch} from 'react-redux';\r\nimport { fade, makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\n// import TitleIcon from '@material-ui/icons/Title';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport { MuiPickersUtilsProvider,KeyboardDatePicker } from '@material-ui/pickers';\r\nimport Button from '@material-ui/core/Button';\r\nimport {TodoTypes} from '../../actions/actionTypes';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport MenuPopup from '../MenuPopup/MenuPopup';\r\nimport './Tab.scss';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    grow: {\r\n      flexGrow: 1,\r\n    },\r\n    menuButton: {\r\n      marginRight: theme.spacing(2),\r\n    },\r\n    title: {\r\n      display: 'none',\r\n      [theme.breakpoints.up('sm')]: {\r\n        display: 'block',\r\n      },\r\n    },\r\n    todo: {\r\n      position: 'relative',\r\n      borderRadius: theme.shape.borderRadius,\r\n      backgroundColor: fade(theme.palette.common.white, 0.15),\r\n      '&:hover': {\r\n        backgroundColor: fade(theme.palette.common.white, 0.25),\r\n      },\r\n      marginRight: theme.spacing(2),\r\n      marginLeft: 0,\r\n      width: '100%',\r\n      [theme.breakpoints.up('sm')]: {\r\n        marginLeft: theme.spacing(2),\r\n        width: 'auto',\r\n      },\r\n    },\r\n    todoIcon: {\r\n      padding: theme.spacing(0, 2),\r\n      height: '100%',\r\n      position: 'absolute',\r\n      pointerEvents: 'none',\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n    },\r\n    inputRoot: {\r\n      color: 'inherit',\r\n    },\r\n    inputInput: {\r\n      padding: theme.spacing(1, 1, 1, 0),\r\n      // vertical padding + font size from searchIcon\r\n      paddingLeft: `calc(1em + ${theme.spacing(0)}px)`,\r\n      transition: theme.transitions.create('width'),\r\n      width: '100%',\r\n      [theme.breakpoints.up('md')]: {\r\n        width: '20ch',\r\n      },\r\n    },\r\n    MuiSvgIcon:{\r\n        color:'white',\r\n    },\r\n  }));\r\n\r\n  \r\n\r\nfunction Tab(){\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n    const textInput = useRef();\r\n    const [title, setTitle] = React.useState('');\r\n    const [selectedDate, setSelectedDate] = React.useState(new Date());\r\n\r\n    const TextFieldComponent = (props) => {\r\n        return <TextField {...props} disabled={true} classes={{root: classes.inputRoot,input: classes.inputInput,}} />\r\n      }\r\n\r\n    const handleDateChange = (date) => {\r\n        setSelectedDate(date);\r\n      };\r\n\r\n      function addTodo(e){\r\n        textInput.current.focus();\r\n        if(title.trim()==='') return;\r\n        dispatch({type:TodoTypes.INSERTTODO,payload:{title:title,completedate:selectedDate}});\r\n        setTitle('');\r\n      }\r\n      function clearText(){\r\n        setTitle('');\r\n        setSelectedDate(new Date());\r\n      }\r\n  \r\n    return (\r\n      <div className={classes.grow}  data-test=\"tabcomponent\">\r\n        <AppBar position=\"static\">\r\n          <Toolbar>\r\n            <IconButton\r\n              edge=\"start\"\r\n              className={classes.menuButton}\r\n              color=\"inherit\"\r\n              aria-label=\"open drawer\"\r\n            >\r\n              <MenuIcon />\r\n            </IconButton>\r\n            <Typography className={classes.title} variant=\"h6\" noWrap>\r\n              To-Do List\r\n            </Typography>\r\n            <div className={classes.todo}>\r\n              <InputBase\r\n                placeholder=\"Add Item…\"\r\n                classes={{\r\n                  root: classes.inputRoot,\r\n                  input: classes.inputInput,\r\n                }}\r\n                inputProps={{ 'aria-label': 'todo' }} \r\n                value = {title} \r\n                onChange = {e=>setTitle(e.target.value)} \r\n                inputRef={textInput} \r\n                autoFocus\r\n              />\r\n            </div>\r\n            <div className={classes.todo}>    \r\n            <MuiPickersUtilsProvider utils={DateFnsUtils} \r\n            color=\"inherit\">         \r\n            <KeyboardDatePicker\r\n        value={selectedDate}\r\n        placeholder=\"10/10/2018\"\r\n        onChange={date => handleDateChange(date)}\r\n        minDate={new Date()}\r\n        format=\"dd/MM/yyyy\" \r\n        clearable ={false} \r\n        TextFieldComponent={TextFieldComponent} \r\n        autoOk = {true}\r\n      />\r\n          </MuiPickersUtilsProvider> \r\n            </div>\r\n            <Button color=\"inherit\" onClick = {addTodo}>Add</Button>\r\n            <Button color=\"inherit\" onClick = {clearText}>Clear</Button>\r\n            <MenuPopup></MenuPopup>\r\n          </Toolbar>\r\n        </AppBar>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default Tab;","import React from 'react';\r\nimport {useSelector, useDispatch} from 'react-redux';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport DoneIcon from '@material-ui/icons/Done';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport {TodoTypes} from '../../actions/actionTypes';\r\nimport Alert from '@material-ui/lab/Alert';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    maxWidth: '100%',\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  dividerInset: {\r\n    'margin-left': '111px',\r\n  },\r\n  doneButton:{\r\n    color:'green'\r\n  },  \r\n  deleteButton:{\r\n    color:'red'\r\n  },    \r\n  incompleteButton:{\r\n    color:'grey'\r\n  },    \r\n  strikeTitle:{\r\n    textDecoration: 'line-through'\r\n  },\r\n}));\r\n\r\n\r\n\r\nfunction MyList() {\r\n  const classes = useStyles();\r\n  const todos = useSelector(state => state.todo);\r\n  const filter = useSelector(state => state.filter);\r\n  const dispatch = useDispatch();\r\n  const options = { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' };\r\n  \r\n  function filterTodo(){\r\n    switch (filter) {\r\n        case 'Today':\r\n            return todos.filter(todo=>todo.completedate.toDateString()===new Date().toDateString());   \r\n        case 'Incomplete':\r\n            return todos.filter(todo=>todo.completed===false);\r\n        case 'Complete':\r\n            return todos.filter(todo=>todo.completed===true);\r\n        case 'Overdue':\r\n            return todos.filter(todo=>(new Date(new Date().toDateString()) > new Date(todo.completedate.toDateString()) && todo.completed===false));            \r\n        default:\r\n            return todos;\r\n    }\r\n  }\r\n\r\n  let todolist = filterTodo();\r\n\r\n  function deleteTodo(id){\r\n    dispatch({type:TodoTypes.DELETETODO,payload:{id:id}});\r\n}\r\n\r\nfunction toggleTodo(id){\r\n    dispatch({type:TodoTypes.TOGGLETODO,payload:{id:id}});\r\n}\r\n  \r\nconsole.log(todolist);\r\n  return (\r\n    <List className={classes.root}  data-test=\"mylistcomponent\">\r\n    {todolist && todolist.map(todo =>{\r\n        return <><ListItem key={todo.id}>\r\n        <ListItemAvatar>\r\n        <Fab size=\"small\" className = {classes.deleteButton} aria-label=\"add\" onClick = {()=>deleteTodo(todo.id)}>\r\n        <DeleteIcon />\r\n      </Fab>\r\n      </ListItemAvatar>\r\n          <ListItemAvatar>        \r\n          <Fab size=\"small\" className = {todo.completed?classes.doneButton:classes.incompleteButton} aria-label=\"add\"  onClick = {()=>toggleTodo(todo.id)}>\r\n          <DoneIcon />\r\n        </Fab>\r\n          </ListItemAvatar>\r\n          <ListItemText primary={todo.title} secondary={todo.completedate.toLocaleDateString('de-DE', options)} className = {todo.completed?classes.strikeTitle:''} />\r\n          {(new Date(new Date().toDateString()) > new Date(todo.completedate.toDateString()) && todo.completed===false)? <Alert variant=\"outlined\" severity=\"warning\">\r\n        Overdue!\r\n      </Alert>:''}\r\n        </ListItem>\r\n        <Divider variant=\"inset\" component=\"li\" className={classes.dividerInset}/>\r\n        </>\r\n    })}      \r\n    </List>\r\n  );\r\n}\r\n\r\n\r\nexport default MyList\r\n","import React from 'react';\nimport Tab from './components/Tab/Tab';\nimport MyList from './components/MyList/MyList';\nimport './App.css';\n\nfunction App() {  \n  return (\n    <div data-test=\"appComponent\">        \n    <Tab></Tab>\n    <MyList></MyList>    \n    </div>\n  );\n}\n\nexport default App;\n","import {\r\n    TodoTypes\r\n} from '../actions/actionTypes';\r\n\r\nconst todolist = [{\r\n        id: 1,\r\n        title: \"Action item 1\",\r\n        completedate: new Date(\"2020-07-18T21:11:54\"),\r\n        completed: false\r\n    },\r\n    {\r\n        id: 2,\r\n        title: \"Action item 2\",\r\n        completedate: new Date(\"2020-08-18T21:11:54\"),\r\n        completed: true\r\n    },\r\n    {\r\n        id: 3,\r\n        title: \"Action item 3\",\r\n        completedate: new Date(),\r\n        completed: true\r\n    },\r\n    {\r\n        id: 4,\r\n        title: \"Action item 4\",\r\n        completedate: new Date(),\r\n        completed: false\r\n    },\r\n    {\r\n        id: 5,\r\n        title: \"Action item 5\",\r\n        completedate: new Date(\"2020-05-18T21:11:54\"),\r\n        completed: false\r\n    }\r\n]\r\n\r\n\r\n\r\nconst todoReducer = (state = todolist.sort((a, b) => b.completedate - a.completedate), action) => {\r\n    switch (action.type) {\r\n        case TodoTypes.GETTODOS:\r\n            return state.sort((a, b) => b.completedate - a.completedate);\r\n        case TodoTypes.INSERTTODO:\r\n            return [...state, {\r\n                id: Date.now(),\r\n                title: action.payload.title,\r\n                completedate: action.payload.completedate,\r\n                completed: false\r\n            }].sort((a, b) => b.completedate - a.completedate);\r\n        case TodoTypes.DELETETODO:\r\n            return state.filter(todo => todo.id !== action.payload.id);\r\n        case TodoTypes.TOGGLETODO:\r\n            return state.map(todo=>{\r\n                if(todo.id === action.payload.id){\r\n                    return {...todo,completed:!todo.completed};\r\n                }                  \r\n                return todo;\r\n            })                    \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default todoReducer;","import {\r\n    FilterTypes\r\n} from '../actions/actionTypes';\r\n\r\nconst filterType = 'All'\r\n\r\n\r\n\r\nconst filterReducer = (state = filterType, action) => {\r\n    switch (action.type) {\r\n        case FilterTypes.FILTERBY:\r\n            return action.payload.filterType;                \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default filterReducer;","import {combineReducers} from 'redux';\r\nimport todoReducer from './todoReducer';\r\nimport filterReducer from './filterReducer';\r\n\r\n\r\nexport default combineReducers({\r\n    todo:todoReducer,\r\n    filter:filterReducer\r\n});\r\n\r\n\r\n","import {createStore,applyMiddleware} from 'redux';\r\nimport createlogger from 'redux-logger';\r\nimport thunk from 'redux-thunk';\r\n//import promise from 'redux-promise-middleware';\r\nimport reducers from './reducers';\r\n\r\nconst middleware = applyMiddleware(thunk,createlogger);\r\n\r\n\r\nexport const store = createStore(reducers,middleware);\r\n\r\n\r\n\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {store} from './store';\nimport {Provider} from 'react-redux';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}